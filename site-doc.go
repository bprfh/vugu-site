package main

// DO NOT EDIT: This file was generated by vugu. Please regenerate instead of editing or add additional code in a separate file.

import "fmt"
import "reflect"
import "github.com/vugu/vugu"

type siteDocPage struct {
	Path       string
	ShortTitle string
	LongTitle  string
}

var siteDocPages = []siteDocPage{
	siteDocPage{
		Path:       "/doc",
		ShortTitle: "Docs",
		LongTitle:  "What is Vugu?",
	},
	siteDocPage{
		Path:       "/doc/start",
		ShortTitle: "Getting Started",
		LongTitle:  "Getting Started",
	},
	siteDocPage{
		Path:       "/doc/files",
		ShortTitle: "Vugu Files",
		LongTitle:  "Vugu Files",
	},
	siteDocPage{
		Path:       "/doc/program",
		ShortTitle: "Program Structure",
		LongTitle:  "Vugu Program Structure",
	},
	siteDocPage{
		Path:       "/doc/dom-events",
		ShortTitle: "DOM Events",
		LongTitle:  "DOM Events",
	},
	siteDocPage{
		Path:       "/doc/components",
		ShortTitle: "Components",
		LongTitle:  "Components",
	},
	siteDocPage{
		Path:       "/doc/build-and-dist",
		ShortTitle: "Building and Distribution",
		LongTitle:  "Building and Distribution",
	},
}

type SiteDocData struct{}

func (data *SiteDocData) nextSiteDocPage() (ret siteDocPage) {
	p := router.Path()
	for i, pg := range siteDocPages {
		if pg.Path == p {
			if i < len(siteDocPages)-1 {
				return siteDocPages[i+1]
			}
		}
	}
	return
}

func (data *SiteDocData) siteDocPage() (ret siteDocPage) {
	p := router.Path()
	for _, pg := range siteDocPages {
		if pg.Path == p {
			return pg
		}
	}
	return
}

var _ vugu.ComponentType = (*SiteDoc)(nil)

func (comp *SiteDoc) BuildVDOM(dataI interface{}) (vdom *vugu.VGNode, css *vugu.VGNode, reterr error) {
	data := dataI.(*SiteDocData)
	_ = data
	_ = fmt.Sprint
	_ = reflect.Value{}
	event := vugu.DOMEventStub
	_ = event
	var n *vugu.VGNode
	n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "site-doc"}}}
	vdom = n
	{
		parent := n
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " hero ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "hero bg-blue"}}}
		parent.AppendChild(n)
		{
			parent := n
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container"}}}
			parent.AppendChild(n)
			{
				parent := n
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 text-white mb-3"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h1", DataAtom: vugu.VGAtom(89090), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "h2 pb-1 pt-2"}}}
						parent.AppendChild(n)
						n.InnerHTML = fmt.Sprint(data.siteDocPage().LongTitle)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "nav", DataAtom: vugu.VGAtom(4867), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "aria-label", Val: "breadcrumb"}}}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n              ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "ol", DataAtom: vugu.VGAtom(79618), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "breadcrumb breadcrumb-minimal"}}}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "breadcrumb-item"}}}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "/"}}}
									parent.AppendChild(n)
									// @click = { router.BrowseTo("/", event) }
									{
										var i_ interface{} = router
										idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
										var i2_ interface{} = router.BrowseTo
										i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
										n.SetDOMEventHandler("click", vugu.DOMEventHandler{
											ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
											Method:                reflect.ValueOf(router).MethodByName("BrowseTo"),
											Args:                  []interface{}{"/", event},
										})
									}
									if false {
										// force compiler to check arguments for type safety
										router.BrowseTo("/", event)
									}
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Home", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "breadcrumb-item"}}}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "href", Val: "/doc"}}}
									parent.AppendChild(n)
									// @click = { router.BrowseTo("/doc", event) }
									{
										var i_ interface{} = router
										idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
										var i2_ interface{} = router.BrowseTo
										i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
										n.SetDOMEventHandler("click", vugu.DOMEventHandler{
											ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
											Method:                reflect.ValueOf(router).MethodByName("BrowseTo"),
											Args:                  []interface{}{"/doc", event},
										})
									}
									if false {
										// force compiler to check arguments for type safety
										router.BrowseTo("/doc", event)
									}
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Doc", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path != "/doc" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "breadcrumb-item active"}}}
									parent.AppendChild(n)
									n.InnerHTML = fmt.Sprint(data.siteDocPage().ShortTitle)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n              ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
			}
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
		}
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / hero ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " sidebar layout ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: ""}}}
		parent.AppendChild(n)
		{
			parent := n
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container overlay-item-top"}}}
			parent.AppendChild(n)
			{
				parent := n
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "content boxed"}}}
						parent.AppendChild(n)
						{
							parent := n
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n              ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row separated"}}}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " content ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Vugu is Go library which makes it easy to write web user interfaces in Go.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "The basic idea is as follows:", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "ul", DataAtom: vugu.VGAtom(42754), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "You write UI components in .vugu files", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ".  These files are similar to UI components you might see in\n                        JavaScript frameworks (e.g. .vue files).  However, they contain no JavaScript and instead have Go language expressions for\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "if", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ", ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "for", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " and other such functionality.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Each .vugu file is converted to a corresponding .go file.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "  There is a development server in the Vugu project\n                        which can do this for you automatically on page reload, or the ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "vugugen", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " command line tool can be used to integrate\n                        with ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "go generate", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ".  The code generation also attempts to provide sensible defaults where needed so your .vugu\n                        files contain as little boilerplate as possible, while still allowing extensive customization if desired.\n                         ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Your project is compiled to a WebAssembly module and run in the browser.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "  Again, the development server makes this easy to \n                        do when starting a project.  As your project evolves and you need to customize parts of this process you can easily do so.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\u00a0\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "The Vugu library", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " (package: ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}, vugu.VGAttribute{Namespace: "", Key: "href", Val: "https://github.com/vugu/vugu"}}}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "github.com/vugu/vugu", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ")\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "provides functionality to efficiently synchronize the HTML DOM", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " on the web page according to the markup \n                        in your .vugu files.  Features like attaching DOM event handlers (click, etc.) and breaking large pages up into components \n                        are supported.\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/start" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      Let's make a basic working Vugu application that runs your browser.  It \n                      only takes three small files to start.  Make sure you have at least ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Go 1.12", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " installed.\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                  ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "id", Val: "section-1"}}}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " <h2 class=\"section-title-2\">Quick Start <a data-scroll href=\"#section-2\" class=\"anchor\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy URL\"><i class=\"icon-hash\"></i></a></h2> ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "ol", DataAtom: vugu.VGAtom(79618), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "step-list"}}}
											parent.AppendChild(n)
											{
												parent := n
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Create a new empty folder anywhere you like.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "  We'll use the name ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "testapp", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " as an example. \n                          Each file you create will be directly in this folder, no subfolders are needed.\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Create", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "go.mod", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: " containing only the line:", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "pre", DataAtom: vugu.VGAtom(290819), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "module main\n", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Create a Vugu component file.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          We'll put a click handler and an element that toggles to demonstrate some basic functionality.\n                          This first component should be called ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "root.vugu", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ":\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "pre", DataAtom: vugu.VGAtom(290819), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "<div class=\"my-first-vugu-comp\">\n    <button @click=\"data.Toggle()\">Test</button>\n    <div vg-if=\"data.Show\">I am here!</div>\n</div>\n\n<style>\n.my-first-vugu-comp { background: #eee; }\n</style>\n\n<script type=\"application/x-go\">\ntype RootData struct { Show bool }\nfunc (data *RootData) Toggle() { data.Show = !data.Show }\n</script>\n", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Create a development server file.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "  Note that this file does not get compiled to WebAssembly,\n                          this is just to make it easy to build and serve your program up to the browser during development.\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "devserver.go", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ":\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "pre", DataAtom: vugu.VGAtom(290819), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "// +build ignore\n\npackage main\n\nimport (\n    \"os\"\n    \"log\"\n    \"net/http\"\n\n    \"github.com/vugu/vugu\"\n)\n\nfunc main() {\n    wd, _ := os.Getwd()\n    l := \"127.0.0.1:8844\"\n    log.Printf(\"Starting HTTP Server at %q\", l)\n    h := vugu.NewDevHTTPHandler(wd, http.Dir(wd))\n    log.Fatal(http.ListenAndServe(l, h))\n}\n", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Run the development server", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ".\n                          While in the same directory, run the command ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "code", DataAtom: vugu.VGAtom(378116), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "go run devserver.go", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "After a few brief moments, the server should start.  It works the same on \n                          Windows, Linux or Mac.", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "strong", DataAtom: vugu.VGAtom(449798), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Browse to it", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: ": ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
															n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "target", Val: "_blank"}, vugu.VGAttribute{Namespace: "", Key: "href", Val: "http://127.0.0.1:8844/"}}}
															parent.AppendChild(n)
															{
																parent := n
																n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "http://127.0.0.1:8844/", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
																parent.AppendChild(n)
															}
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "li", DataAtom: vugu.VGAtom(45570), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													{
														parent := n
														n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
														parent.AppendChild(n)
														{
															parent := n
															n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Marvel at the wonder you have created.\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
															parent.AppendChild(n)
														}
													}
												}
												n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n  \n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
												parent.AppendChild(n)
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                  ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/files" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Vugu Files", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/program" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Program Overview (incl: Render loop)", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/dom-events" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "DOM events", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/components" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Components", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                \n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								if data.siteDocPage().Path == "/doc/build-and-dist" {
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "article", DataAtom: vugu.VGAtom(261127), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-8 content-body"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "p", DataAtom: vugu.VGAtom(3073), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Build and Dist", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                \n\n                \n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: "\n                <article class=\"col-md-8 content-body\">\n\n                  <p>You can change a domain's contact information at any time. Domains have four sets of contacts, which are listed below after the instructions.</p>\n\n                  <div class=\"alert alert-warning\" role=\"alert\">\n                    <i class=\"icon-alert-circle\"></i>\n                    <h4 class=\"fs-22\">Tip</h4>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos minus, qui error eveniet! Et consequuntur fugit nulla nam</p>\n                  </div>\n\n                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Id illo eveniet blanditiis aliquam voluptatem quaerat sapiente alias ex pariatur quasi, ipsa dolorem impedit nemo eius, hic est magnam quisquam soluta!</p>\n\n\n                  <section id=\"section-1\">\n                    <h2 class=\"section-title-2\">Quick Start <a data-scroll href=\"#section-2\" class=\"anchor\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy URL\"><i class=\"icon-hash\"></i></a></h2>\n                    <ol class=\"step-list\">\n                      <li><div>\n                        <p>Go to the <a href=\"\" class=\"external\">Domains Settings</a> page.</p>\n                      </div></li>\n                      <li><div>\n                        <p>Under Contact Information, click Edit. (Note: if you don't see the Edit link, you may have Domain Privacy turned on. Click the View personal information link, and then you'll be able to click the Edit link.)</p>\n                      </div>\n                        <ol>\n                          <li><div>\n                            <p>To edit All Contacts, enter the Contact, Address, Phone, and Email information you want to update, and then click OK.</p>\n                          </div></li>\n                          <li><div>\n                            <p>To edit each individual contact, clear the Use for all contact types check box and enter the information you want to update.</p>\n                          </div></li>\n                        </ol>\n                      </li>\n                      <li><div>\n                        <p>Click Save</p>\n                      </div></li>\n                    </ol>\n                  </section>\n\n\n                  <section id=\"section-2\">\n                    <h2 class=\"section-title-2\">Video Preview <a data-scroll href=\"#section-2\" class=\"anchor\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy URL\"><i class=\"icon-hash\"></i></a></h2>\n                    <div class=\"row\">\n                      <div class=\"col-12\">\n                        <video\n                          id=\"video\"\n                          class=\"youtube video-js vjs-default-skin video-16-9\"\n                          controls\n                          width=\"640\" height=\"264\"\n                          data-setup='{ \"techOrder\": [\"youtube\"], \"sources\": [{ \"type\": \"video/youtube\", \"src\": \"https://www.youtube.com/watch?v=DkeiKbqa02g\"}], \"youtube\": { \"ytControls\": 2 } }'\n                        >\n                        </video>\n                      </div>\n                    </div>\n                  </section>\n\n\n                  <section id=\"section-3\">\n                    <h2 class=\"section-title-2\">Typography <a data-scroll href=\"#section-3\" class=\"anchor\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy URL\"><i class=\"icon-hash\"></i></a></h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Molestiae debitis dicta, dolorum modi aliquam praesentium, molestias! Quibusdam magni natus eligendi, delectus odit, veritatis dignissimos voluptate dolorum vitae laborum fuga? Facilis.</p>\n                    <div class=\"row gutter-2\">\n                      <div class=\"col-8 col-md-5\">\n                        <div class=\"type boxed\">\n                          <div>\n                            <span class=\"badge badge-primary\">New</span>\n                            <h5 class=\"type-title\">Open Sans</h5>\n                            <div class=\"type-example\">\n                              <span>Ab</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-8 col-md-5\">\n                        <div class=\"type bordered\">\n                          <div>\n                            <h5 class=\"type-title\">Open Sans</h5>\n                            <div class=\"type-example\">\n                              <span>Ab</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n\n                  <section id=\"section-4\">\n                    <h2 class=\"section-title-2\">File Tree <a data-scroll href=\"#section-4\" class=\"anchor\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Copy URL\"><i class=\"icon-hash\"></i></a></h2>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Suscipit magnam exercitationem fugit doloremque ut, neque nobis fuga voluptatum minima officiis iure consectetur nemo maiores, hic qui rem quae dolor dolorem.</p>\n                    <div class=\"row\">\n                      <div class=\"col-md-8\">\n                        <div class=\"bordered p-2 p-md-5\">\n                          <ul class=\"file-tree\">\n                            <li class=\"file-tree-folder empty\">Images\n                              <span>description</span>\n                            </li>\n                            <li class=\"file-tree-folder\">CSS\n                              <span>description</span>\n                              <ul>\n                                <li>file name <span>description</span></li>\n                                <li>file name <span>description</span></li>\n                              </ul>\n                            </li>\n                            <li class=\"file-tree-folder\">HTML\n                              <span>description</span>\n                              <ul>\n                                <li class=\"file-tree-folder\">PAGES\n                                  <span>description</span>\n                                  <ul>\n                                    <li>file name <span>description</span></li>\n                                    <li>file name <span>description</span></li>\n                                    <li>file name <span>description</span></li>\n                                  </ul>\n                                </li>\n                                <li>file name <span>description</span></li>\n                                <li>file name <span>description</span></li>\n                              </ul>\n                            </li>\n                            <li>index.html <span>description</span></li>\n                            <li>components.html <span>description</span></li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n\n                </article>\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / content ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " sidebar ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "aside", DataAtom: vugu.VGAtom(67333), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-md-4 content-aside bg-light"}}}
								parent.AppendChild(n)
								{
									parent := n
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                  ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
									n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "widget"}}}
									parent.AppendChild(n)
									{
										parent := n
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h3", DataAtom: vugu.VGAtom(199938), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "widget-title"}}}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "Documentation", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
										n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "list-group list-group-related"}}}
										parent.AppendChild(n)
										{
											parent := n
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											for key, value := range siteDocPages {
												_, _ = key, value
												n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "list-group-item list-group-item-action d-flex align-items-center active"}}}
												parent.AppendChild(n)
												n.Props = vugu.Props{
													"href": value.Path,
												}
												// @click = { router.BrowseTo(value.Path, event) }
												{
													var i_ interface{} = router
													idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
													var i2_ interface{} = router.BrowseTo
													i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
													n.SetDOMEventHandler("click", vugu.DOMEventHandler{
														ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
														Method:                reflect.ValueOf(router).MethodByName("BrowseTo"),
														Args:                  []interface{}{value.Path, event},
													})
												}
												if false {
													// force compiler to check arguments for type safety
													router.BrowseTo(value.Path, event)
												}
												{
													parent := n
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "i", DataAtom: vugu.VGAtom(1537), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "fs-20 icon-file-text2 text-primary mr-1"}}}
													parent.AppendChild(n)
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "span", DataAtom: vugu.VGAtom(40708), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
													n.InnerHTML = fmt.Sprint(value.ShortTitle)
													n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
													parent.AppendChild(n)
												}
											}
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: "\n                      <a href=\"#\" class=\"list-group-item list-group-item-action d-flex align-items-center active\">\n                        <i class=\"fs-20 icon-file-text2 text-primary mr-1\"></i>\n                        Registering Domain Names\n                      </a>\n                      <a href=\"#\" class=\"list-group-item list-group-item-action d-flex align-items-center active\">\n                        <i class=\"fs-20 icon-file-text2 text-primary mr-1\"></i>\n                        What's the difference between a domain and a website?\n                      </a>\n                      <a href=\"#\" class=\"list-group-item list-group-item-action d-flex align-items-center active\">\n                        <i class=\"fs-20 icon-file-text2 text-primary mr-1\"></i>\n                        What is protected registration ?\n                      </a>\n                      <a href=\"#\" class=\"list-group-item list-group-item-action d-flex align-items-center active\">\n                        <i class=\"fs-20 icon-file-text2 text-primary mr-1\"></i>\n                        Transfer domain to another registrar\n                      </a>\n                      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
											n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
											parent.AppendChild(n)
										}
										n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                  ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
										parent.AppendChild(n)
									}
									n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
									parent.AppendChild(n)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n                ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / sidebar ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n              ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
							n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
							parent.AppendChild(n)
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
			}
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
		}
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / sidebar layout ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n\n\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " TODO: this is kinda cool, see if we can hack it in later ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " interpost ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "section", DataAtom: vugu.VGAtom(354311), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "bg-dark text-white separator-bottom p-0"}}}
		parent.AppendChild(n)
		{
			parent := n
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
			n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "container"}}}
			parent.AppendChild(n)
			{
				parent := n
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
				n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "row gutter-0"}}}
				parent.AppendChild(n)
				{
					parent := n
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-12 col-md-6"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "br", DataAtom: vugu.VGAtom(514), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " <h4 class=\"interpost interpost-prev\"><a href=\"\">Forwarding your incoming support email to Zendesk using Yahoo</a></h4> ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
					n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "div", DataAtom: vugu.VGAtom(92931), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "col-12 col-md-6 text-right"}}}
					parent.AppendChild(n)
					{
						parent := n
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
						if data.nextSiteDocPage().Path != "" {
							n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "h4", DataAtom: vugu.VGAtom(214274), Namespace: "", Attr: []vugu.VGAttribute{vugu.VGAttribute{Namespace: "", Key: "class", Val: "interpost interpost-next"}}}
							parent.AppendChild(n)
							{
								parent := n
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n              ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n = &vugu.VGNode{Type: vugu.VGNodeType(3), Data: "a", DataAtom: vugu.VGAtom(1), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
								n.InnerHTML = fmt.Sprint(data.nextSiteDocPage().LongTitle)
								n.Props = vugu.Props{
									"href": data.nextSiteDocPage().Path,
								}
								// @click = { router.BrowseTo(data.nextSiteDocPage().Path, event) }
								{
									var i_ interface{} = router
									idat_ := reflect.ValueOf(&i_).Elem().InterfaceData()
									var i2_ interface{} = router.BrowseTo
									i2dat_ := reflect.ValueOf(&i2_).Elem().InterfaceData()
									n.SetDOMEventHandler("click", vugu.DOMEventHandler{
										ReceiverAndMethodHash: uint64(idat_[0]) ^ uint64(idat_[1]) ^ uint64(i2dat_[0]) ^ uint64(i2dat_[1]),
										Method:                reflect.ValueOf(router).MethodByName("BrowseTo"),
										Args:                  []interface{}{data.nextSiteDocPage().Path, event},
									})
								}
								if false {
									// force compiler to check arguments for type safety
									router.BrowseTo(data.nextSiteDocPage().Path, event)
								}
								n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n            ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
								parent.AppendChild(n)
							}
						}
						n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n          ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
						parent.AppendChild(n)
					}
					n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n        ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
					parent.AppendChild(n)
				}
				n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n      ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
				parent.AppendChild(n)
			}
			n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
			parent.AppendChild(n)
		}
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n    ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(4), Data: " / interpost ", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
		n = &vugu.VGNode{Type: vugu.VGNodeType(1), Data: "\n\n\n\n\n\n", DataAtom: vugu.VGAtom(0), Namespace: "", Attr: []vugu.VGAttribute(nil)}
		parent.AppendChild(n)
	}
	return
}

type SiteDoc struct {}

func (ct *SiteDoc) NewData(props vugu.Props) (interface{}, error) { return &SiteDocData{}, nil }

func init() { vugu.RegisterComponentType("site-doc", &SiteDoc{}) }
